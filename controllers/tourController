const Tour = require('../models/tourModel');

const getAllTours = async (req, res) => {
  try {
    // Copy current query object.
    const queryObj = { ...req.query };
    // Exclude some fields from query object if they exist.
    const exludedFieldsObj = ['sort', 'page', 'limit', 'fields'];
    exludedFieldsObj.forEach((item) => delete queryObj[item]);

    // Update sort symbols.
    let queryString = JSON.stringify(queryObj);
    queryString = queryString.replace(
      /\bgte|gt|lte|lt\b\g/,
      (match) => `$${match}`,
    );

    console.log(queryString);

    // Create a query.
    let query = Tour.find(JSON.parse(queryString));

    if (req.query.sort) {
      const sortBy = req.query.sort.split(',').join(' ');
      query = query.sort(sortBy);
    } else {
      query = query.sort('-createdAt');
    }

    if (req.query.fields) {
      const fields = req.query.fields.split(',').join(' ');
      query = query.select(fields);
    } else {
      query = query.select('-__v');
    }

    const page = req.query.page * 1 || 1;
    const limit = req.query.limit * 1 || 100;
    const offset = (page - 1) * limit;

    query = query.skip(offset).limit(limit);

    // Fetch items from query.
    const tours = await query;

    res.status(200).json({
      status: 'success',
      results: tours.length,
      data: {
        tours,
      },
    });
  } catch (err) {
    res.status(400).json({
      status: 'error',
      message: 'Data must be sent correctly!',
    });
  }
};

const getTour = async (req, res) => {
  try {
    const tours = await Tour.findById(req.params.id);

    res.status(200).json({
      status: 'success',
      results: tours.length,
      data: {
        tours,
      },
    });
  } catch (err) {
    res.status(400).json({
      status: 'error',
      message: 'Data must be sent correctly!',
    });
  }
};

const createTour = async (req, res) => {
  try {
    const tour = await Tour.create(req.body);
    res.status(201).json({
      status: 'success',
      data: { tour },
    });
  } catch (err) {
    res.status(400).json({
      status: 'error',
      message: 'Data must be sent correctly!',
    });
  }
};

const updateTour = async (req, res) => {
  try {
    const tour = await Tour.findByIdAndUpdate(req.params.id, req.body, {
      new: true,
    });

    res.status(200).json({
      status: 'success',
      data: { tour },
    });
  } catch (err) {
    res.status(400).json({
      status: 'error',
      message: 'Data must be sent correctly!',
    });
  }
};

const deleteTour = async (req, res) => {
  try {
    const tour = await Tour.findByIdAndDelete(req.params.id, req.body, {
      new: true,
    });

    res.status(200).json({
      status: 'success',
      data: { tour },
    });
  } catch (err) {
    res.status(400).json({
      status: 'error',
      message: 'Data must be sent correctly!',
    });
  }
};

module.exports = {
  getAllTours,
  getTour,
  createTour,
  updateTour,
  deleteTour,
};
